{"version":3,"file":"static/js/580.8c761f78.chunk.js","mappings":"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","sources":["components/LoginForm/LoginFormStyled.js","components/ContactFilter/ContactFilter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  border-radius: 4px;\n  border: 1px solid #fff;\n  padding: 48px;\n  display: flex;\n  align-items: start;\n  flex-direction: column;\n  gap: 8px;\n  width: 300px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 200px;\n  padding: 4px 12px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 4px;\n`;\n\nexport const LogInBtn = styled.button`\n  border-radius: 8px;\n  background-color: violet;\n  color: whitesmoke;\n`;\n","import { StyledInput } from 'components/LoginForm/LoginFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilter } from 'redux/filterSlice';\n\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label >\n      Find contacts by name\n      <StyledInput\n        \n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </label>\n  );\n}","import { LogInBtn, StyledForm, StyledInput } from 'components/LoginForm/LoginFormStyled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\n\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label >\n        Name\n        <StyledInput\n         \n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label >\n        Number\n        <StyledInput\n          \n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <LogInBtn  type=\"submit\">\n        Add contact\n      </LogInBtn>\n    </StyledForm>\n  );\n};","import { useDispatch} from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\n  export const ContactList = ({ contacts }) => {\n    const dispatch = useDispatch();\n  \n    return (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  };","import Filter from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && <b>Loading...</b>}\n      <ContactList contacts={visibleContacts} />\n    </div>\n  );\n}"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledInput","_templateObject2","LogInBtn","_templateObject3","Filter","dispatch","useDispatch","filter","useSelector","selectStatusFilter","_jsxs","children","_jsx","type","name","value","onChange","e","setFilter","target","placeholder","ContactForm","contacts","selectContacts","_useState","useState","_useState2","_slicedToArray","contactName","setcontactName","_useState3","_useState4","number","setNumber","handleChange","_e$target","onSubmit","preventDefault","some","_ref","window","alert","concat","addContact","pattern","title","required","ContactList","map","_ref2","id","onClick","deleteContact","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","visibleContacts","selectVisibleContacts"],"sourceRoot":""}