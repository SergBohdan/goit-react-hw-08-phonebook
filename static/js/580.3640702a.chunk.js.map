{"version":3,"file":"static/js/580.3640702a.chunk.js","mappings":"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","sources":["components/LoginForm/LoginFormStyled.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  border-radius: 4px;\n  border: 1px solid #fff;\n  padding: 48px;\n  display: flex;\n  align-items: start;\n  flex-direction: column;\n  gap: 8px;\n  width: 300px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  width: 200px;\n  padding: 4px 12px;\n  font-weight: 600;\n  line-height: 1.5;\n  border-radius: 4px;\n`;\n\nexport const LogInBtn = styled.button`\n  border-radius: 8px;\n  background-color: violet;\n  color: whitesmoke;\n`;\n","import { LogInBtn, StyledForm, StyledInput } from 'components/LoginForm/LoginFormStyled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\n\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name.toLowerCase() === contactName.toLowerCase())) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label >\n        Name\n        <StyledInput\n         \n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label >\n        Number\n        <StyledInput\n          \n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <LogInBtn  type=\"submit\">\n        Add contact\n      </LogInBtn>\n    </StyledForm>\n  );\n};\n","import { StyledInput } from 'components/LoginForm/LoginFormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilter } from 'redux/filterSlice';\n\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label >\n      Find contacts by name\n      <StyledInput\n        \n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport Filter from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n   return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && <b>Loading...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledInput","_templateObject2","LogInBtn","_templateObject3","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","contactName","setcontactName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","name","_jsxs","onSubmit","preventDefault","some","_ref","toLowerCase","window","alert","concat","addContact","children","_jsx","type","onChange","pattern","title","required","Filter","filter","selectStatusFilter","setFilter","placeholder","ContactList","visibleContacts","selectVisibleContacts","map","id","onClick","deleteContact","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts"],"sourceRoot":""}