{"version":3,"file":"static/js/580.033a4aed.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/contacts/contactsSelectors';\nimport { setFilter } from 'redux/filterSlice';\n\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label >\n      Find contacts by name\n      <input\n        \n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name\"\n      />\n    </label>\n  );\n}","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\n\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label >\n        Name\n        <input\n         \n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label >\n        Number\n        <input\n          \n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button  type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectContacts, selectStatusFilter } from 'redux/contacts/contactsSelectors';\n\n\n\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul >\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p >\n            {name}: {number}\n          </p>\n          <button\n           \n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};","\nimport Filter from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b>\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}"],"names":["Filter","dispatch","useDispatch","filter","useSelector","selectStatusFilter","_jsxs","children","_jsx","type","name","value","onChange","e","setFilter","target","placeholder","ContactForm","contacts","selectContacts","_useState","useState","_useState2","_slicedToArray","contactName","setcontactName","_useState3","_useState4","number","setNumber","handleChange","_e$target","onSubmit","preventDefault","some","_ref","window","alert","concat","addContact","pattern","title","required","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","_ref2","id","onClick","deleteContact","Contacts","isLoading","selectIsLoading","error","selectError"],"sourceRoot":""}